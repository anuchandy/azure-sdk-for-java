// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.metricsadvisor.models;

/**
 * A type representing data explorer connection string.
 */
public final class AzureDataExplorerDataSourceConnectionString {
    private final String rawConnectionString;
    private final CredentialType credentialType;
    private final String credentialId;

    /**
     * Gets the raw connection string.
     *
     * @return The raw connection string
     */
    public String getValue() {
        return this.rawConnectionString;
    }

    /**
     * Gets the credential type used for the connection string.
     *
     * @return The credential type.
     */
    public CredentialType getCredentialType() {
        return this.credentialType;
    }

    /**
     * The id of the credential entity.
     *
     * @return The credential entity id.
     */
    public String getCredentialId() {
        return this.credentialId;
    }

    /**
     * Creates a {@link AzureDataExplorerDataSourceConnectionString} that uses the credential encoded in the given
     * {@code connectionString} for authentication.
     *
     * @param connectionString The connection string with credential encoded
     * @return The {@link AzureDataExplorerDataSourceConnectionString}
     */
    public static AzureDataExplorerDataSourceConnectionString withBasicCredential(String connectionString) {
        return new AzureDataExplorerDataSourceConnectionString(connectionString,
            CredentialType.BASIC,
            null);
    }

    /**
     * Creates a {@link AzureDataExplorerDataSourceConnectionString} that uses managed identity for authentication.
     *
     * @param connectionString The connection string
     * @return The {@link AzureDataExplorerDataSourceConnectionString}
     */
    public static AzureDataExplorerDataSourceConnectionString withManagedIdentityCredential(String connectionString) {
        return new AzureDataExplorerDataSourceConnectionString(connectionString,
            CredentialType.MANAGED_IDENTITY,
            null);
    }

    /**
     * Creates a {@link AzureDataExplorerDataSourceConnectionString} that uses service principal for authentication.
     *
     * @param connectionString The connection string
     * @param servicePrincipalCredentialId The service principal credential id.
     * @return The {@link AzureDataExplorerDataSourceConnectionString}
     */
    public static AzureDataExplorerDataSourceConnectionString withServicePrincipalCredential(String connectionString,
                                                                                             String servicePrincipalCredentialId) {
        return new AzureDataExplorerDataSourceConnectionString(connectionString,
            CredentialType.SERVICE_PRINCIPAL,
            servicePrincipalCredentialId);
    }

    /**
     * Creates a {@link AzureDataExplorerDataSourceConnectionString} that uses service principal in
     * keyvault for authentication.
     *
     * @param connectionString The connection string
     * @param servicePrincipalInKVCredentialId The service principal in keyvault credential id.
     * @return The {@link AzureDataExplorerDataSourceConnectionString}
     */
    public static AzureDataExplorerDataSourceConnectionString withServicePrincipalCredentialInKeyVault(String connectionString,
                                                                                                       String servicePrincipalInKVCredentialId) {
        return new AzureDataExplorerDataSourceConnectionString(connectionString,
            CredentialType.SERVICE_PRINCIPAL_IN_KV,
            servicePrincipalInKVCredentialId);
    }

    private AzureDataExplorerDataSourceConnectionString(String connectionString,
                                                        CredentialType credentialType,
                                                        String credentialId) {
        this.rawConnectionString = connectionString;
        this.credentialType = credentialType;
        this.credentialId = credentialId;
    }
}
