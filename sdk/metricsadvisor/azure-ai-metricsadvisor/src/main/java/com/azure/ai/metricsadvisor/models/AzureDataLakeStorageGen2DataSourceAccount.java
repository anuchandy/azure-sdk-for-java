// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.metricsadvisor.models;

import com.azure.ai.metricsadvisor.implementation.util.AzureDataLakeStorageGen2DataSourceAccountHelper;

/**
 * A type representing data lake storage account.
 */
public final class AzureDataLakeStorageGen2DataSourceAccount {
    private final String accountName;
    private final String accountKey;
    private final CredentialType credentialType;
    private String credentialId;

    static {
        AzureDataLakeStorageGen2DataSourceAccountHelper.setAccessor(
            new AzureDataLakeStorageGen2DataSourceAccountHelper.AzureDataLakeStorageGen2DataSourceAccountAccessor() {
            @Override
            public void setId(AzureDataLakeStorageGen2DataSourceAccount feed, String id) {
                feed.credentialId = id;
            }

            @Override
            public String getAccountKey(AzureDataLakeStorageGen2DataSourceAccount feed) {
                return feed.accountKey;
            }
        });
    }

    /**
     * Gets the account name.
     *
     * @return The account name
     */
    public String getAccountName() {
        return this.accountName;
    }

    /**
     * Gets the credential type used for the connection string.
     *
     * @return The credential type.
     */
    public CredentialType getCredentialType() {
        return this.credentialType;
    }

    /**
     * The id of the credential entity.
     *
     * @return The credential entity id.
     */
    public String getCredentialId() {
        return this.credentialId;
    }

    /**
     * Creates {@link AzureDataLakeStorageGen2DataSourceAccount} with provided account name and key.
     *
     * @param accountName The account name
     * @param accountKey The account key
     * @return The {@link AzureDataLakeStorageGen2DataSourceAccount}
     */
    public static AzureDataLakeStorageGen2DataSourceAccount withBasicCredentials(String accountName, String accountKey) {
        return new AzureDataLakeStorageGen2DataSourceAccount(accountName,
            accountKey);
    }

    /**
     * Creates {@link AzureDataLakeStorageGen2DataSourceAccount} with shared key credential.
     *
     * @param accountName The account name
     * @param sharedKeyCredentialId The shared key credential id
     * @return The {@link AzureDataLakeStorageGen2DataSourceAccount}
     */
    public static AzureDataLakeStorageGen2DataSourceAccount withSharedKeyCredential(String accountName, String sharedKeyCredentialId) {
        return new AzureDataLakeStorageGen2DataSourceAccount(accountName,
            CredentialType.DATA_LAKE_GEN2_SHARED_KEY,
            sharedKeyCredentialId);
    }

    /**
     * Creates a {@link AzureDataLakeStorageGen2DataSourceAccount} that uses service principal for authentication.
     *
     * @param accountName The account name
     * @param servicePrincipalCredentialId The service principal credential id
     * The {@link AzureDataLakeStorageGen2DataSourceAccount}
     */
    public static AzureDataLakeStorageGen2DataSourceAccount withServicePrincipalCredential(String accountName,
                                                                                     String servicePrincipalCredentialId) {
        return new AzureDataLakeStorageGen2DataSourceAccount(accountName,
            CredentialType.SERVICE_PRINCIPAL,
            servicePrincipalCredentialId);
    }

    /**
     * Creates a {@link AzureDataLakeStorageGen2DataSourceAccount} that uses service principal in
     * keyvault for authentication.
     *
     * @param accountName The account name
     * @param servicePrincipalInKVCredentialId The service principal in keyvault credential id
     * The {@link AzureDataLakeStorageGen2DataSourceAccount}
     */
    public static AzureDataLakeStorageGen2DataSourceAccount withServicePrincipalCredentialInKeyVault(String accountName,
                                                                                               String servicePrincipalInKVCredentialId) {
        return new AzureDataLakeStorageGen2DataSourceAccount(accountName,
            CredentialType.SERVICE_PRINCIPAL_IN_KV,
            servicePrincipalInKVCredentialId);
    }

    private AzureDataLakeStorageGen2DataSourceAccount(String accountName,
                                                CredentialType credentialType,
                                                String credentialId) {
        this.accountName = accountName;
        this.credentialType = credentialType;
        this.credentialId = credentialId;
        this.accountKey = null;
    }

    private AzureDataLakeStorageGen2DataSourceAccount(String accountName,
                                                      String accountKey) {
        this.accountName = accountName;
        this.credentialType = CredentialType.BASIC;
        this.accountKey = accountKey;
        this.credentialId = null;
    }

    String getAccountKey() {
        return this.accountKey;
    }
}
